{
	"info": {
		"_postman_id": "12345678-1234-5678-9012-123456789012",
		"name": "Pactis Wallet API",
		"description": "Complete API collection for testing the Pactis wallet system with authentication, wallet operations, and transaction management.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12345678"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('accessToken', response.data.access_token);",
									"    pm.collectionVariables.set('userId', response.data.user.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{userEmail}}\",\n    \"password\": \"{{userPassword}}\",\n    \"first_name\": \"John\",\n    \"last_name\": \"Doe\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/auth/signup",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('accessToken', response.data.access_token);",
									"    pm.collectionVariables.set('userId', response.data.user.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{userEmail}}\",\n    \"password\": \"{{userPassword}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Wallet Management",
			"item": [
				{
					"name": "Get User Wallets",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.data && response.data.length > 0) {",
									"        pm.collectionVariables.set('walletId', response.data[0].id);",
									"        pm.collectionVariables.set('walletCurrency', response.data[0].currency);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/wallets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"wallets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Wallet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('secondWalletId', response.data.id);",
									"    pm.collectionVariables.set('secondWalletCurrency', response.data.currency);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"currency\": \"EUR\",\n    \"initial_balance\": 0\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/wallets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"wallets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Wallet Balance",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/wallets/balance?wallet_id={{walletId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"wallets",
								"balance"
							],
							"query": [
								{
									"key": "wallet_id",
									"value": "{{walletId}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Transactions",
			"item": [
				{
					"name": "Deposit Funds",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('lastTransactionId', response.data.transaction_id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"wallet_id\": \"{{walletId}}\",\n    \"amount\": 100,\n    \"description\": \"Test deposit via Postman\",\n    \"idempotency_key\": \"deposit_{{$randomUUID}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/wallets/deposit",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"wallets",
								"deposit"
							]
						}
					},
					"response": []
				},
				{
					"name": "Withdraw Funds",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('lastTransactionId', response.data.transaction_id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"wallet_id\": \"{{walletId}}\",\n    \"amount\": 25,\n    \"description\": \"Test withdrawal via Postman\",\n    \"idempotency_key\": \"withdraw_{{$randomUUID}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/wallets/withdraw",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"wallets",
								"withdraw"
							]
						}
					},
					"response": []
				},
				{
					"name": "Transfer Between Wallets",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('lastOutgoingTransactionId', response.data.outgoing.transaction_id);",
									"    pm.collectionVariables.set('lastIncomingTransactionId', response.data.incoming.transaction_id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"from_wallet_id\": \"{{walletId}}\",\n    \"to_wallet_id\": \"{{secondWalletId}}\",\n    \"amount\": 15,\n    \"description\": \"Test transfer via Postman\",\n    \"idempotency_key\": \"transfer_{{$randomUUID}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/wallets/transfer",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"wallets",
								"transfer"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Transaction History (Fixed)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/wallets/transactions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"wallets",
								"transactions"
							],
							"query": [
								{
									"key": "wallet_id",
									"value": "{{walletId}}",
									"disabled": true,
									"description": "Currently disabled due to validation issue"
								},
								{
									"key": "limit",
									"value": "10",
									"disabled": true,
									"description": "Currently disabled due to validation issue"
								},
								{
									"key": "page",
									"value": "1",
									"disabled": true,
									"description": "Currently disabled due to validation issue"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Test Scenarios",
			"item": [
				{
					"name": "Test Idempotency - Duplicate Deposit",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"wallet_id\": \"{{walletId}}\",\n    \"amount\": 50,\n    \"description\": \"Duplicate deposit test\",\n    \"idempotency_key\": \"duplicate_test_123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/wallets/deposit",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"wallets",
								"deposit"
							]
						}
					},
					"response": []
				},
				{
					"name": "Test Idempotency - Same Duplicate Deposit",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"wallet_id\": \"{{walletId}}\",\n    \"amount\": 50,\n    \"description\": \"Duplicate deposit test\",\n    \"idempotency_key\": \"duplicate_test_123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/wallets/deposit",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"wallets",
								"deposit"
							]
						}
					},
					"response": []
				},
				{
					"name": "Test Invalid Amount - Negative",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"wallet_id\": \"{{walletId}}\",\n    \"amount\": -50,\n    \"description\": \"Invalid negative amount test\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/wallets/deposit",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"wallets",
								"deposit"
							]
						}
					},
					"response": []
				},
				{
					"name": "Test Invalid Wallet ID",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"wallet_id\": \"invalid-wallet-id\",\n    \"amount\": 50,\n    \"description\": \"Invalid wallet ID test\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/wallets/deposit",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"wallets",
								"deposit"
							]
						}
					},
					"response": []
				},
				{
					"name": "Test Insufficient Funds - Large Withdrawal",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"wallet_id\": \"{{walletId}}\",\n    \"amount\": 999999,\n    \"description\": \"Large withdrawal test (should fail)\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/wallets/withdraw",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"wallets",
								"withdraw"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Error Testing",
			"item": [
				{
					"name": "Test Unauthorized Request",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/wallets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"wallets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Test Invalid Token",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer invalid_token_here"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/wallets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"wallets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Test Weak Password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"weakpassword@test.com\",\n    \"password\": \"123\",\n    \"first_name\": \"Weak\",\n    \"last_name\": \"Password\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/auth/signup",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"signup"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Set default values if not already set",
					"if (!pm.collectionVariables.get('baseUrl')) {",
					"    pm.collectionVariables.set('baseUrl', 'http://localhost:5000');",
					"}",
					"",
					"if (!pm.collectionVariables.get('userEmail')) {",
					"    pm.collectionVariables.set('userEmail', 'testuser@example.com');",
					"}",
					"",
					"if (!pm.collectionVariables.get('userPassword')) {",
					"    pm.collectionVariables.set('userPassword', 'Password123@');",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Global test to log response for debugging",
					"console.log('Response Status:', pm.response.code);",
					"console.log('Response Body:', pm.response.text());"
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:5000",
			"type": "string"
		},
		{
			"key": "userEmail",
			"value": "testuser@example.com",
			"type": "string"
		},
		{
			"key": "userPassword",
			"value": "Password123@",
			"type": "string"
		},
		{
			"key": "accessToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "userId",
			"value": "",
			"type": "string"
		},
		{
			"key": "walletId",
			"value": "",
			"type": "string"
		},
		{
			"key": "walletCurrency",
			"value": "",
			"type": "string"
		},
		{
			"key": "secondWalletId",
			"value": "",
			"type": "string"
		},
		{
			"key": "secondWalletCurrency",
			"value": "",
			"type": "string"
		},
		{
			"key": "lastTransactionId",
			"value": "",
			"type": "string"
		},
		{
			"key": "lastOutgoingTransactionId",
			"value": "",
			"type": "string"
		},
		{
			"key": "lastIncomingTransactionId",
			"value": "",
			"type": "string"
		}
	]
}